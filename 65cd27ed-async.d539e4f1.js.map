{"version":3,"sources":["node_modules/@ant-design/pro-form/es/components/Radio/index.js","src/services/sys/ResourceController.ts","src/pages/sys/resource/ResourceForm.tsx","src/pages/sys/resource/index.tsx"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"options\", \"radioType\", \"layout\", \"proFieldProps\", \"valueEnum\"];\nimport { runFunction } from '@ant-design/pro-utils';\nimport { Radio } from 'antd';\nimport React from 'react';\nimport { createField } from \"../../BaseForm/createField\";\nimport ProField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    options = _ref.options,\n    radioType = _ref.radioType,\n    layout = _ref.layout,\n    proFieldProps = _ref.proFieldProps,\n    valueEnum = _ref.valueEnum,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread(_objectSpread({\n    valueType: radioType === 'button' ? 'radioButton' : 'radio',\n    ref: ref,\n    valueEnum: runFunction(valueEnum, undefined)\n  }, rest), {}, {\n    fieldProps: _objectSpread({\n      options: options,\n      layout: layout\n    }, fieldProps),\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      customLightMode: true\n    }\n  }));\n});\n\n/**\n * Radio\n *\n * @param\n */\nvar ProFormRadioComponents = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var fieldProps = _ref2.fieldProps,\n    children = _ref2.children;\n  return /*#__PURE__*/_jsx(Radio, _objectSpread(_objectSpread({}, fieldProps), {}, {\n    ref: ref,\n    children: children\n  }));\n});\nvar ProFormRadio = createField(ProFormRadioComponents, {\n  valuePropName: 'checked',\n  ignoreWidth: true\n});\nvar WrappedProFormRadio = ProFormRadio;\nWrappedProFormRadio.Group = RadioGroup;\nWrappedProFormRadio.Button = Radio.Button;\n\n// @ts-ignore\n// eslint-disable-next-line no-param-reassign\nWrappedProFormRadio.displayName = 'ProFormComponent';\nexport default WrappedProFormRadio;","import {request} from \"@umijs/max\";\r\nimport {ResponseStructure} from \"@/services/entity/Common\";\r\nimport {Resource, ResourceSearchParams} from \"@/services/entity/Sys\";\r\n\r\n\r\n\r\n/**\r\n * @description 资源列表\r\n * @since 2025-07-17\r\n */\r\nexport const getResourceList = async (params: ResourceSearchParams): Promise<ResponseStructure<Resource[]>> => {\r\n  return request('/api/sys/resource/list', {\r\n    method: 'POST',\r\n    data: params,\r\n  });\r\n};\r\n/**\r\n * @description 资源详情\r\n * @since 2025-07-17\r\n */\r\nexport const getResourceInfo = async (params: ResourceSearchParams): Promise<ResponseStructure<Resource>> => {\r\n  return request(`/api/sys/resource/info`, {\r\n    method: 'GET',\r\n    params:{id:params},\r\n  })\r\n}\r\n/**\r\n * @description 资源添加\r\n * @since 2025-07-17\r\n */\r\nexport const addResourceInfo = async (params: Resource) => {\r\n  return request(`/api/sys/resource/add`, {\r\n    method: 'POST',\r\n    data: params,\r\n  })\r\n}\r\n/**\r\n * @description 资源修改\r\n * @since 2025-07-17\r\n */\r\nexport const updateResourceInfo = async (params: Resource) => {\r\n  return request(`/api/sys/resource/update`, {\r\n    method: 'POST',\r\n    data: params,\r\n  })\r\n}\r\n/**\r\n * @description 资源删除\r\n * @since 2025-07-17\r\n */\r\nexport const deleteResourceInfo = async (params: ResourceSearchParams) => {\r\n  return request(`/api/sys/resource/delete`, {\r\n    method: 'GET',\r\n    params:{id: params.id},\r\n  })\r\n}\r\n/**\r\n * @description 选项\r\n * @since 2025-07-17\r\n */\r\nexport const getResourceOptions = async (): Promise<Resource[]> => {\r\n  const {data} =await request('/api/sys/resource/select', {});\r\n  return data\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport DrawerForm from \"@/components/DrawerForm\";\r\nimport {request, useIntl} from \"@umijs/max\";\r\nimport {Form, message} from \"antd\";\r\nimport {ProFormRadio,ProFormSelect, ProFormText, ProFormTextArea} from \"@ant-design/pro-components\";\r\nimport {ProFormDependency} from \"@ant-design/pro-form\";\r\nimport {\r\n  addResourceInfo,\r\n  getResourceInfo,\r\n  getResourceOptions,\r\n  updateResourceInfo\r\n} from \"@/services/sys/ResourceController\";\r\nimport {ResourceSearchParams} from \"@/services/entity/Sys\";\r\nimport {getOptionList} from \"@/services/sys/DictController\";\r\n\r\nconst ResourceForm = (props: {\r\n  id: any;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onSuccess: () => void\r\n}) => {\r\n  const {id, open, setOpen, onSuccess} = props\r\n  const [form] = Form.useForm();\r\n  const intl = useIntl()\r\n  const [readOnly, setReadOnly] = useState(false)\r\n  return (\r\n    <DrawerForm\r\n      readonly={readOnly}\r\n      id={id}\r\n      request={async (params:ResourceSearchParams) => {\r\n        const res = await getResourceInfo(params);\r\n        if (res.data.type !== 'Resource_Type_Route') {\r\n          setReadOnly(true)\r\n        }\r\n        return res;\r\n      }}\r\n      open={open}\r\n      setOpen={(open) => {\r\n        if (open!) {\r\n          setReadOnly(false)\r\n        }\r\n        if (setOpen) {\r\n          setOpen(open)\r\n        }\r\n      }}\r\n      onSuccess={async (values: any) => {\r\n        values.type = 'Resource_Type_Route'\r\n        if (id){\r\n          await updateResourceInfo(values);\r\n        }else{\r\n          await addResourceInfo(values);\r\n        }\r\n        onSuccess();\r\n        return true;\r\n      }}\r\n      form={form}\r\n    >\r\n      <ProFormText\r\n        name={'id'}\r\n        hidden={true}\r\n      />\r\n      <ProFormSelect\r\n        name=\"parentId\"\r\n        label={intl.formatMessage({id: 'pages.sys.resource.menu.parent'})}\r\n        showSearch={true}\r\n        required={true}\r\n        rules={[\r\n          {required: true}\r\n        ]}\r\n        request={async () => getResourceOptions()}\r\n      />\r\n      <ProFormText\r\n        name=\"name\"\r\n        label={intl.formatMessage({id: 'pages.common.name.en'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormText\r\n        name=\"nameCn\"\r\n        label={intl.formatMessage({id: 'pages.common.name.zh'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      {/*<ProFormSelect*/}\r\n      {/*  name=\"type\"*/}\r\n      {/*  label={intl.formatMessage({id: 'pages.common.type'})}*/}\r\n      {/*  rules={[{required: true}]}*/}\r\n      {/*  request={async () =>  getOptionList('Resource_Type')}*/}\r\n      {/*/>*/}\r\n      <ProFormRadio.Group\r\n        tooltip={{title: intl.formatMessage({id: 'pages.sys.resource.leaf.tooltip'})}}\r\n        name=\"leaf\"\r\n        label={intl.formatMessage({id: 'pages.sys.resource.leaf'})}\r\n        rules={[{required: true}]}\r\n        options={[\r\n          {\r\n            label: intl.formatMessage({id: 'pages.common.yes'}),\r\n            value: true\r\n          },\r\n          {\r\n            label: intl.formatMessage({id: 'pages.common.no'}),\r\n            value: false\r\n          }\r\n        ]}></ProFormRadio.Group>\r\n      <ProFormDependency name={['leaf']}>\r\n        {({leaf}) => {\r\n          return <ProFormText\r\n            name=\"path\"\r\n            label={intl.formatMessage({id: 'pages.sys.resource.menu.path'})}\r\n            required={leaf}\r\n            rules={[{required: leaf}]}\r\n          />\r\n        }}\r\n      </ProFormDependency>\r\n      <ProFormText\r\n        name=\"icon\"\r\n        label={intl.formatMessage({id: 'pages.sys.resource.menu.icon'})}\r\n      />\r\n      <ProFormText\r\n        name=\"sortNum\"\r\n        label={intl.formatMessage({id: 'pages.common.sort.number'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormTextArea\r\n        name=\"description\"\r\n        label={intl.formatMessage({id: 'pages.common.description'})}\r\n      />\r\n    </DrawerForm>\r\n  )\r\n\r\n}\r\nexport default ResourceForm\r\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport {ActionType, PageContainer, ProTable} from \"@ant-design/pro-components\";\r\nimport {request, useIntl} from \"@umijs/max\";\r\nimport {Button, message, Popconfirm} from \"antd\";\r\nimport ResourceForm from \"@/pages/sys/resource/ResourceForm\";\r\nimport {FormattedMessage} from \"@@/plugin-locale\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {history, useAccess} from \"@@/exports\";\r\nimport {getOptionList} from \"@/services/sys/DictController\";\r\nimport {deleteResourceInfo, getResourceList} from \"@/services/sys/ResourceController\";\r\nimport {ResourceSearchParams} from \"@/services/entity/Sys\";\r\n\r\nconst Resource: React.FC = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(undefined);\r\n  const ref = useRef<ActionType>()\r\n  const intl = useIntl()\r\n  const permissionMap = useAccess();\r\n  const path = history.location.pathname\r\n  const write = permissionMap[path]\r\n  const columns: any = [\r\n\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.name.en'}),\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.name.zh'}),\r\n      dataIndex: 'nameCn',\r\n      key: 'nameCn',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.sys.resource.menu.path'}),\r\n      dataIndex: 'path',\r\n      width: 200,\r\n      key: 'path',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.type'}),\r\n      dataIndex: 'type',\r\n      valueType: 'select',\r\n      request: async () => getOptionList(\"Resource_Type\"),\r\n      key: 'type',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.description'}),\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.sort.number'}),\r\n      dataIndex: 'sortNum',\r\n      key: 'sortNum',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n\r\n      title: intl.formatMessage({id: 'pages.common.option'}),\r\n      valueType: 'option',\r\n      key: 'option',\r\n      // 固定\r\n      fixed: 'right',\r\n      render: (text: any, record: Record<any, any>, _: any, action: any) =>write&& [\r\n        <Button\r\n          type={'link'}\r\n          key=\"editable\"\r\n          onClick={() => {\r\n            setId(record.id)\r\n            setOpen(true)\r\n          }}\r\n        >\r\n          {intl.formatMessage({id: 'pages.common.edit'})}\r\n        </Button>,\r\n        <Popconfirm\r\n          key={'delete'}\r\n          title={intl.formatMessage({id: 'pages.confirm.delete'})}\r\n          onConfirm={async () => {\r\n            const {code, message: msg} = await deleteResourceInfo(record);\r\n            action?.reload()\r\n            if (code === 200) {\r\n              message.success(msg)\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n          }}\r\n        >\r\n          <Button type={'link'}\r\n                  key={'delete'}>\r\n            {intl.formatMessage({id: 'pages.common.delete'})}\r\n          </Button>\r\n        </Popconfirm>\r\n      ],\r\n    }\r\n  ]\r\n  return (\r\n    <PageContainer>\r\n      <ProTable\r\n        actionRef={ref}\r\n        request={async (params:ResourceSearchParams) => getResourceList(params)}\r\n        toolBarRender={() =>write&& [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined/>}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setId(undefined)\r\n              setOpen(true)\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"pages.common.new\"/>\r\n          </Button>,\r\n        ]}\r\n        columns={columns}\r\n      />\r\n      <ResourceForm\r\n        id={id}\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onSuccess={() => {\r\n          setId(undefined)\r\n          ref.current?.reload()\r\n        }}\r\n      />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Resource;\r\n"],"names":[],"mappings":"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"}