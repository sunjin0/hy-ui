{"version":3,"sources":["src/services/msg/SmsController.ts","src/pages/message/sms/index.tsx"],"sourcesContent":["import {request} from \"@umijs/max\";\nimport {SmsSearchParams,Sms} from \"@/services/entity/Msg\";\nimport {ResponseStructure} from \"@/services/entity/Common\";\n\n/**\n * @description 获取短信列表\n * @since 2025-07-17\n */\nexport const getSmsList = async (params: SmsSearchParams): Promise<ResponseStructure<Sms[]>> => {\n  return request('/api/msg/sms/list', {\n    method: 'POST',\n    data: params,\n  });\n}\n/**\n * @description 删除短信信息\n * @since 2025-07-17\n */\nexport const deleteSmsInfo = async (params: SmsSearchParams): Promise<ResponseStructure<Sms>> => {\n  return request('/api/msg/sms/delete', {\n    method: 'GET',\n    params: {\n      id: params.id\n    },\n  })\n}\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport {ActionType, PageContainer, ProTable} from \"@ant-design/pro-components\";\r\nimport {request, useIntl, history} from \"@umijs/max\";\r\nimport {Button, message, Popconfirm, Tag} from \"antd\";\r\nimport {useAccess} from \"@@/exports\";\r\nimport Model from \"@/components/Model\";\r\nimport {getOptionList} from \"@/services/sys/DictController\";\r\nimport {deleteSmsInfo, getSmsList} from \"@/services/msg/SmsController\";\r\nimport {SmsSearchParams} from \"@/services/entity/Msg\";\r\n\r\nconst Sms: React.FC = () => {\r\n  const intl = useIntl()\r\n  const ref = useRef<ActionType>()\r\n  const permissionMap = useAccess();\r\n  const path = history.location.pathname\r\n  const write = permissionMap[path]\r\n  const columns: any[] = [\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.id'}),\r\n      dataIndex: 'id',\r\n      valueType: 'text',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.email'}),\r\n      dataIndex: 'email',\r\n      copyable: true,\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.type'}),\r\n      dataIndex: 'type',\r\n      valueType: 'select',\r\n      request: async () => getOptionList(\"Message_Type\"),\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.captcha'}),\r\n      dataIndex: 'code',\r\n      valueType: 'text',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.email.subject'}),\r\n      dataIndex: 'subject',\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.status'}),\r\n      dataIndex: 'state',\r\n      valueType: 'select',\r\n      width: 80,\r\n      render: (text: any, record: any, _: any, action: any) => {\r\n        return <Tag\r\n          color={record.state === 1 ? 'gray' : 'green'}>{record.state === 1 ? intl.formatMessage({id: 'pages.common.unusable'}) : intl.formatMessage({id: 'pages.common.used'})}</Tag>\r\n      },\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.email.content'}),\r\n      dataIndex: 'body',\r\n      hideInTable: true,\r\n    },\r\n\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.option'}),\r\n      valueType: 'option',\r\n      fixed: 'right',\r\n      render: (text: any, record: any, _: any, action: any) => write && [\r\n        <Model\r\n          key={'preview'}\r\n          buttonText={intl.formatMessage({id: 'pages.common.preview'})}\r\n          title={intl.formatMessage({id: 'pages.email.content'})}\r\n          text={record.body}\r\n        />,\r\n        <Popconfirm\r\n          key={'delete'}\r\n          title={intl.formatMessage({id: 'pages.confirm.delete'})}\r\n          onConfirm={async () => {\r\n            const {code, message: msg} = await deleteSmsInfo(record);\r\n            if (code === 200) {\r\n              message.success(msg)\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n            action?.reload()\r\n          }}\r\n        >\r\n          <Button type={'link'}\r\n          >\r\n            {intl.formatMessage({id: 'pages.common.delete'})}\r\n          </Button>\r\n        </Popconfirm>\r\n      ],\r\n    }\r\n  ]\r\n  return (\r\n    <PageContainer>\r\n      <ProTable\r\n        actionRef={ref}\r\n        rowKey={'user'}\r\n        columns={columns}\r\n        request={async (params:SmsSearchParams) => getSmsList(params)}\r\n      />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Sms;\r\n"],"names":[],"mappings":"6hBAQO,IAAM,EAAa,MAAO,GACxB,GAAA,SAAO,EAAC,oBAAqB,CAClC,OAAQ,OACR,KAAM,CACR,GAMW,EAAgB,MAAO,GAC3B,GAAA,SAAO,EAAC,sBAAuB,CACpC,OAAQ,MACR,OAAQ,CACN,GAAI,EAAO,EAAE,AACf,CACF,GCbI,EAAgB,KACpB,IAAM,EAAO,GAAA,SAAO,IACd,EAAM,GAAA,QAAM,IAGZ,EAAQ,AAFQ,GAAA,WAAS,GAEJ,CADd,SAAO,CAAC,QAAQ,CAAC,QAAQ,CACL,CAC3B,EAAiB,CACrB,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,iBAAiB,GAChD,UAAW,KACX,UAAW,MACb,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,oBAAoB,GACnD,UAAW,QACX,SAAU,CAAA,CACZ,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,mBAAmB,GAClD,UAAW,OACX,UAAW,SACX,QAAS,SAAY,GAAA,eAAa,EAAC,eACrC,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,sBAAsB,GACrD,UAAW,OACX,UAAW,OACX,aAAc,CAAA,CAChB,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,GACpD,UAAW,UACX,SAAU,CAAA,CACZ,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,GACpD,UAAW,QACX,UAAW,SACX,MAAO,GACP,OAAQ,CAAC,EAAW,EAAa,EAAQ,IAChC,UAAC,SAAG,EACT,MAAO,AAAiB,IAAjB,EAAO,KAAK,CAAS,OAAS,iBAAU,AAAiB,IAAjB,EAAO,KAAK,CAAS,EAAK,aAAa,CAAC,CAAC,GAAI,uBAAuB,GAAK,EAAK,aAAa,CAAC,CAAC,GAAI,mBAAmB,KAEvK,aAAc,CAAA,CAChB,EACA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,GACpD,UAAW,OACX,YAAa,CAAA,CACf,EAEA,CACE,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,GACpD,UAAW,SACX,MAAO,QACP,OAAQ,CAAC,EAAW,EAAa,EAAQ,IAAgB,GAAS,CAChE,UAAC,SAAK,EAEJ,WAAY,EAAK,aAAa,CAAC,CAAC,GAAI,sBAAsB,GAC1D,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,GACpD,KAAM,EAAO,IAAI,EAHZ,WAKP,UAAC,SAAU,EAET,MAAO,EAAK,aAAa,CAAC,CAAC,GAAI,sBAAsB,GACrD,UAAW,UACT,GAAM,CAAC,KAAA,CAAI,CAAE,QAAS,CAAG,CAAC,CAAG,MAAM,EAAc,GAC7C,AAAS,MAAT,EACF,SAAO,CAAC,OAAO,CAAC,GAEhB,SAAO,CAAC,KAAK,CAAC,SAEhB,GAAA,EAAQ,MAAM,GAChB,WAEA,UAAC,SAAM,EAAC,KAAM,gBAEX,EAAK,aAAa,CAAC,CAAC,GAAI,qBAAqB,MAd3C,UAiBR,AACH,EACD,CACD,MACE,UAAC,eAAa,WACZ,UAAC,UAAQ,EACP,UAAW,EACX,OAAQ,OACR,QAAS,EACT,QAAS,MAAO,GAA2B,EAAW,OAI9D"}