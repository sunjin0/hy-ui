{"version":3,"sources":["src/services/sys/AdminController.ts","src/pages/sys/admin/AdminForm.tsx","src/pages/sys/admin/index.tsx"],"sourcesContent":["import {request}from \"@umijs/max\";\r\nimport {Admin, AdminSearchParams} from \"@/services/entity/Sys\";\r\nimport {Option, ResponseStructure} from \"@/services/entity/Common\";\r\n\r\n/**\r\n * @description 获取管理员列表\r\n * @since 2025-07-17\r\n */\r\nexport const getAdminList = async (params: AdminSearchParams): Promise<ResponseStructure<Admin[]>> =>{\r\n  return request('/api/sys/admin/list', {\r\n    method: 'POST',\r\n    data: params,\r\n  });\r\n}\r\n/**\r\n * @description 获取管理员信息\r\n * @since 2025-07-17\r\n */\r\nexport const getAdminInfo = async (params: AdminSearchParams): Promise<ResponseStructure<Admin>> =>{\r\n  return request('/api/sys/admin/info', {\r\n    method: 'GET',\r\n    params:{id:params},\r\n  });\r\n}\r\n/**\r\n * @description 添加管理员\r\n * @since 2025-07-17\r\n */\r\nexport const addAdminInfo = async (params: Admin): Promise<ResponseStructure<Admin>> =>{\r\n  return request('/api/sys/admin/add', {\r\n    method: 'POST',\r\n    data: params,\r\n  });\r\n}\r\n/**\r\n * @description 修改管理员\r\n * @since 2025-07-17\r\n */\r\nexport const updateAdminInfo = async (params: Admin): Promise<ResponseStructure<Admin>> =>{\r\n  return request('/api/sys/admin/update', {\r\n    method: 'POST',\r\n    data: params,\r\n  })\r\n}\r\n/**\r\n * @description 删除管理员\r\n * @since 2025-07-17\r\n */\r\nexport const deleteAdminInfo = async (params: AdminSearchParams): Promise<ResponseStructure<Admin>> =>{\r\n  return request('/api/sys/admin/delete', {\r\n    method: 'GET',\r\n    params:{\r\n      id: params.id\r\n    },\r\n  });\r\n}\r\n/**\r\n * @deprecated 获取角色选项\r\n * @since 2025-07-17\r\n */\r\nexport const getRoleOptions = async (): Promise<Option[]> =>{\r\n  const {data} = await request('/api/sys/role/options', {\r\n    method: 'GET',\r\n  });\r\n  return data;\r\n}\r\n","import DrawerForm from \"@/components/DrawerForm\";\r\nimport {request, useIntl} from \"@umijs/max\";\r\nimport {Form} from \"antd\";\r\nimport {ProFormSelect, ProFormText} from \"@ant-design/pro-components\";\r\nimport {addAdminInfo, getAdminInfo, getRoleOptions, updateAdminInfo} from \"@/services/sys/AdminController\";\r\nimport {getOptionList} from \"@/services/sys/DictController\";\r\n\r\nconst AdminForm = (props: {\r\n  id: any;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onSuccess: () => void\r\n}) => {\r\n  const {id, open, setOpen, onSuccess} = props\r\n  const intl = useIntl()\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <DrawerForm\r\n      open={open}\r\n      setOpen={setOpen}\r\n      id={id}\r\n      request={async (params) => getAdminInfo(params)}\r\n      onSuccess={async (values) => {\r\n        if (!values.avatar) {\r\n          values.avatar = 'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png'\r\n        }\r\n        if (id) {\r\n          await updateAdminInfo(values)\r\n        } else {\r\n          await addAdminInfo(values)\r\n        }\r\n        onSuccess();\r\n        return true;\r\n      }}\r\n      form={form}\r\n    >\r\n      <ProFormText\r\n        name={'id'}\r\n        hidden={true}\r\n      />\r\n      <ProFormSelect\r\n        name={'roleIds'}\r\n        label={intl.formatMessage({id: 'pages.sys.role.name'})}\r\n        rules={[{required: true}]}\r\n        request={async () => getRoleOptions()}\r\n        fieldProps={{\r\n          mode: 'multiple'\r\n        }}\r\n      />\r\n      <ProFormText\r\n        name={'username'}\r\n        label={intl.formatMessage({id: 'pages.common.name'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormSelect\r\n        name={'sex'}\r\n        label={intl.formatMessage({id: 'pages.common.gender'})}\r\n        rules={[{required: true}]}\r\n        request={async () => getOptionList(\"Gender_Type\")}\r\n      />\r\n      <ProFormSelect\r\n        name={'type'}\r\n        label={intl.formatMessage({id: 'pages.common.type'})}\r\n        rules={[{required: true}]}\r\n        request={async () => getOptionList(\"System_Role\")}\r\n      />\r\n      <ProFormText\r\n        name={'email'}\r\n        label={intl.formatMessage({id: 'pages.common.email'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormText\r\n        name={'phone'}\r\n        label={intl.formatMessage({id: 'pages.common.phone'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormText.Password\r\n        required={!id}\r\n        name={'password'}\r\n        label={intl.formatMessage({id: 'pages.common.password'})}\r\n        rules={[{required: !id, min: 6, max: 10}]}\r\n      />\r\n    </DrawerForm>);\r\n};\r\nexport default AdminForm;\r\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport {ActionType, PageContainer, ProTable} from \"@ant-design/pro-components\";\r\nimport {history, request, useIntl} from \"@umijs/max\";\r\nimport {Button, Image, message, Popconfirm} from \"antd\";\r\nimport AdminForm from \"@/pages/sys/admin/AdminForm\";\r\nimport {useAccess} from \"@@/exports\";\r\nimport {getOptionList} from \"@/services/sys/DictController\";\r\nimport {deleteAdminInfo, getAdminList, getRoleOptions} from \"@/services/sys/AdminController\";\r\nimport {AdminSearchParams} from \"@/services/entity/Sys\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {FormattedMessage} from \"@@/plugin-locale\";\r\nconst Admin: React.FC = () => {\r\n  const intl = useIntl()\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(undefined);\r\n  const ref = useRef<ActionType>()\r\n  const permissionMap = useAccess();\r\n  const path = history.location.pathname\r\n  const write = permissionMap[path]\r\n  const columns: any[] = [\r\n    {\r\n      title: intl.formatMessage({id: 'pages.sys.role.name'}),\r\n      dataIndex: 'roleIds',\r\n      valueType: 'select',\r\n      request: async () => getRoleOptions(),\r\n      fieldProps: {\r\n        mode: 'multiple'\r\n      },\r\n      hideInSearch: true,\r\n      key: 'roleIds',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.name'}),\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.gender'}),\r\n      dataIndex: 'sex',\r\n      valueType: 'select',\r\n      request: async () => getOptionList(\"Gender_Type\"),\r\n      key: 'sex',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.avatar'}),\r\n      dataIndex: 'avatar',\r\n      render: (text: string) => <Image src={text} width={40} height={40} alt={\"\"}/>,\r\n      key: 'avatar',\r\n      hideInSearch: true,\r\n\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.type'}),\r\n      dataIndex: 'type',\r\n      valueType: 'select',\r\n      request: async () =>getOptionList(\"System_Role\"),\r\n      key: 'type',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.email'}),\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.phone'}),\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.option'}),\r\n      dataIndex: 'option',\r\n      key: 'option',\r\n      valueType: 'option',\r\n      render: (text: any, record: any, _: any, action: any) => write && [\r\n        <Button\r\n          type={'link'}\r\n          key=\"editable\"\r\n          onClick={() => {\r\n            setId(record.id)\r\n            setOpen(true)\r\n          }}\r\n        >\r\n          {intl.formatMessage({id: 'pages.common.edit'})}\r\n        </Button>,\r\n        <Popconfirm\r\n          key={'delete'}\r\n          title={intl.formatMessage({id: 'pages.confirm.delete'})}\r\n          onConfirm={async () => {\r\n            const {code, message: msg} = await deleteAdminInfo(record);\r\n            if (code === 200) {\r\n              message.success(msg)\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n            action?.reload()\r\n          }}\r\n        >\r\n          <Button type={'link'}\r\n          >\r\n            {intl.formatMessage({id: 'pages.common.delete'})}\r\n          </Button>\r\n        </Popconfirm>\r\n      ],\r\n    }\r\n  ]\r\n  return (\r\n    <PageContainer>\r\n      <ProTable\r\n        actionRef={ref}\r\n        rowKey={'user'}\r\n        toolBarRender={() => write&&[\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined/>}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setId(undefined)\r\n              setOpen(true)\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"pages.common.new\"/>\r\n          </Button>,\r\n        ]}\r\n        columns={columns}\r\n        request={async (params: AdminSearchParams) => getAdminList(params)}\r\n      />\r\n      <AdminForm\r\n        id={id}\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onSuccess={() => {\r\n          setId(undefined)\r\n          ref.current?.reload()\r\n        }}\r\n      />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":[],"mappings":"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"}