{"version":3,"sources":["src/services/user/MemberController.ts","src/pages/user/member/MemberForm.tsx","src/pages/user/Member/index.tsx"],"sourcesContent":["import {request} from \"@umijs/max\";\r\nimport {ResponseStructure} from \"@/services/entity/Common\";\r\n/**\r\n * 查询参数\r\n * @since 2025-07-23 10:46:11\r\n */\r\nexport interface MemberSearchParams extends Member {\r\n    current: number;\r\n    pageSize: number;\r\n}\r\n/**\r\n * 实体\r\n * @since 2025-07-23 10:46:11\r\n */\r\nexport interface Member {\r\n    id: number;\r\n            username : string;\r\n            password : string;\r\n            nickname : string;\r\n            email : string;\r\n            phone : string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    deleted: boolean;\r\n    state: number;\r\n    sortNum: number;\r\n}\r\n/**\r\n * 分页查询\r\n * @param params 查询参数\r\n * @since 2025-07-23 10:46:11\r\n * @returns 查询结果\r\n */\r\nexport const getMemberList = async (params: MemberSearchParams): Promise<ResponseStructure<Member[]>> => {\r\n    return await request('/api/user/member/list', {\r\n        method: 'POST',\r\n        data: params,\r\n    })\r\n}\r\n/**\r\n * 查询信息\r\n * @param params 查询参数\r\n * @since 2025-07-23 10:46:11\r\n * @returns 查询结果\r\n */\r\nexport const getMemberInfo = async (params: MemberSearchParams): Promise<ResponseStructure<Member>> => {\r\n    let {data} = await request('/api/user/member/info', {\r\n        method: 'get',\r\n        params: {id:params},\r\n\r\n    });\r\n    return data\r\n}\r\n/**\r\n * 新增信息\r\n * @param params 新增参数\r\n * @since 2025-07-23 10:46:11\r\n * @returns 新增结果\r\n */\r\nexport const addMemberInfo = async (params: Member) => {\r\n    return request('/api/user/member/add', {\r\n        method: 'post',\r\n        data: params,\r\n    });\r\n}\r\n/**\r\n * 修改信息\r\n * @param params 修改参数\r\n * @since 2025-07-23 10:46:11\r\n * @returns 修改结果\r\n */\r\nexport const updateMemberInfo = async (params: Member) => {\r\n    return request('/api/user/member/update', {\r\n        method: 'post',\r\n        data: params,\r\n    })\r\n}\r\n/**\r\n * 删除信息\r\n * @param params 删除参数\r\n * @since 2025-07-23 10:46:11\r\n * @returns 删除结果\r\n */\r\nexport const deleteMemberInfo = async (params: MemberSearchParams) => {\r\n    return request('/api/user/member/delete', {\r\n        method: 'get',\r\n        params: {id:params.id},\r\n    })\r\n}\r\n","import DrawerForm from \"@/components/DrawerForm\";\r\nimport { useIntl} from \"@umijs/max\";\r\nimport {Form} from \"antd\";\r\nimport {ProFormText} from \"@ant-design/pro-components\";\r\nimport {getMemberInfo,addMemberInfo,updateMemberInfo} from \"@/services/user/MemberController\";\r\n/**\r\n *\r\n *@description 表单\r\n *@since 2025-07-23 10:46:11\r\n */\r\nconst MemberForm = (props: {\r\n  id: any;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onSuccess: () => void\r\n}) => {\r\n  const {id, open, setOpen, onSuccess} = props\r\n  const intl = useIntl()\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <DrawerForm\r\n      open={open}\r\n      setOpen={setOpen}\r\n      id={id}\r\n      request={async (params) => getMemberInfo(params)}\r\n      form={form}\r\n      onSuccess={async (values) => {\r\n        if(id){\r\n          await updateMemberInfo(values)\r\n        }else{\r\n          await addMemberInfo(values)\r\n        }\r\n          onSuccess()\r\n          return true\r\n      }}\r\n    >\r\n      <ProFormText\r\n        name={'id'}\r\n        hidden={true}\r\n      />\r\n        <ProFormText\r\n          name={'username'}\r\n          label={'用户名'}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            }\r\n          ]}\r\n        />\r\n        <ProFormText\r\n          name={'password'}\r\n          label={'密码'}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            }\r\n          ]}\r\n        />\r\n        <ProFormText\r\n          name={'nickname'}\r\n          label={'昵称'}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            }\r\n          ]}\r\n        />\r\n        <ProFormText\r\n          name={'email'}\r\n          label={'邮箱'}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            }\r\n          ]}\r\n        />\r\n        <ProFormText\r\n          name={'phone'}\r\n          label={'手机号'}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            }\r\n          ]}\r\n        />\r\n    </DrawerForm>);\r\n};\r\nexport default MemberForm;\r\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport {ActionType, PageContainer, ProTable} from \"@ant-design/pro-components\";\r\nimport {request, useIntl} from \"@umijs/max\";\r\nimport {Button, message, Popconfirm} from \"antd\";\r\nimport MemberForm from \"@/pages/user/member/MemberForm\";\r\nimport {FormattedMessage} from \"@@/plugin-locale\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {history, useAccess} from \"@@/exports\";\r\nimport {getMemberList,deleteMemberInfo,MemberSearchParams} from \"@/services/user/MemberController\";\r\n/**\r\n*\r\n*@description 页面\r\n*@since 2025-07-23 10:46:11\r\n*/\r\nconst Member: React.FC = () => {\r\nconst [open, setOpen] = useState(false);\r\nconst [id, setId] = useState(undefined);\r\nconst ref = useRef<ActionType>()\r\n    const intl = useIntl()\r\n    const permissionMap = useAccess();\r\n    const path = history.location.pathname\r\n    const write = permissionMap[path]\r\n    const columns: any = [\r\n\r\n        {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        valueType: 'test',\r\n        ellipsis: true,\r\n        },\r\n        {\r\n        title: '密码',\r\n        dataIndex: 'password',\r\n        valueType: 'test',\r\n        ellipsis: true,\r\n        },\r\n        {\r\n        title: '昵称',\r\n        dataIndex: 'nickname',\r\n        valueType: 'test',\r\n        ellipsis: true,\r\n        },\r\n        {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n        valueType: 'test',\r\n        ellipsis: true,\r\n        },\r\n        {\r\n        title: '手机号',\r\n        dataIndex: 'phone',\r\n        valueType: 'test',\r\n        ellipsis: true,\r\n        },\r\n    {\r\n\r\n    title: intl.formatMessage({id: 'pages.common.option'}),\r\n    valueType: 'option',\r\n    key: 'option',\r\n    // 固定\r\n    fixed: 'right',\r\n    render: (text: any, record: Record<any, any>, _: any, action: any) =>write&& [\r\n    <Button\r\n            type={'link'}\r\n            key=\"editable\"\r\n            onClick={() => {\r\n    setId(record.id)\r\n    setOpen(true)\r\n    }}\r\n    >\r\n    {intl.formatMessage({id: 'pages.common.edit'})}\r\n    </Button>,\r\n    <Popconfirm\r\n            key={'delete'}\r\n            title={intl.formatMessage({id: 'pages.confirm.delete'})}\r\n    onConfirm={async () => {\r\n     await deleteMemberInfo(record)\r\n    ref.current?.reload()\r\n    }}\r\n    >\r\n    <Button type={'link'}\r\n            key={'delete'}>\r\n        {intl.formatMessage({id: 'pages.common.delete'})}\r\n    </Button>\r\n    </Popconfirm>\r\n    ],\r\n    }\r\n    ]\r\n    return (\r\n    <PageContainer>\r\n        <ProTable\r\n                actionRef={ref}\r\n                request={async (params) => getMemberList(params as MemberSearchParams)}\r\n            toolBarRender={() =>write&& [\r\n            <Button\r\n                    key=\"button\"\r\n                    icon={<PlusOutlined/>}\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                setId(undefined)\r\n                setOpen(true)\r\n                }}\r\n                >\r\n                <FormattedMessage id=\"pages.common.new\"/>\r\n            </Button>,\r\n            ]}\r\n            columns={columns}\r\n            />\r\n            <MemberForm\r\n                    id={id}\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    onSuccess={() => {\r\n            setId(undefined)\r\n            ref.current?.reload()\r\n            }}\r\n            />\r\n    </PageContainer>\r\n    );\r\n    };\r\n\r\n    export default Member;\r\n"],"names":[],"mappings":"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"}