{"version":3,"sources":["src/services/sys/roleController.ts","src/pages/sys/role/RoleForm.tsx","src/pages/sys/role/AuthorizationForm.tsx","src/pages/sys/role/index.tsx"],"sourcesContent":["import {request} from \"@umijs/max\";\r\nimport {Resource, Role, RoleSearchParams} from \"@/services/entity/Sys\";\r\nimport {ResponseStructure} from \"@/services/entity/Common\";\r\n\r\n\r\n/**\r\n * @description 角色列表\r\n * @since 2025-07-17\r\n */\r\nexport const getRoleList = async (params: RoleSearchParams): Promise<ResponseStructure<Role[]>> => {\r\n  return request('/api/sys/role/list', {\r\n    method: 'POST',\r\n    data: params,\r\n  });\r\n};\r\n/**\r\n * @description 角色详情\r\n * @since 2025-07-17\r\n */\r\nexport const getRoleInfo = async (params: RoleSearchParams): Promise<ResponseStructure<Role>> => {\r\n  return request(`/api/sys/role/info`, {\r\n    method: 'GET',\r\n    params:{id:params},\r\n  })\r\n}\r\n/**\r\n * @description 角色添加\r\n * @since 2025-07-17\r\n */\r\nexport const addRoleInfo = async (params: Role) => {\r\n  return request(`/api/sys/role/add`, {\r\n    method: 'POST',\r\n    data: params,\r\n  })\r\n}\r\n/**\r\n * @description 角色修改\r\n * @since 2025-07-17\r\n */\r\nexport const updateRoleInfo = async (params: Role) => {\r\n  return request(`/api/sys/role/update`, {\r\n    method: 'POST',\r\n    data: params,\r\n  })\r\n}\r\n/**\r\n * @description 角色删除\r\n * @since 2025-07-17\r\n */\r\nexport const deleteRoleInfo = async (params: RoleSearchParams) => {\r\n  return request(`/api/sys/role/delete`, {\r\n    method: 'GET',\r\n    params:{id: params.id},\r\n  })\r\n}\r\n/**\r\n * @description 获取资源列表\r\n * @since 2025-07-17\r\n */\r\nexport const getResourceList = async () => {\r\n  return request(`/api/sys/role/resource`, {\r\n    method: 'GET',\r\n  })\r\n}\r\n/**\r\n * @description 角色权限\r\n * @since 2025-07-17\r\n */\r\nexport const getRoleAuthorization = async (params: RoleSearchParams) => {\r\n  return request(`/api/sys/role-resource/permission`, {\r\n    method: 'GET',\r\n    params:{\r\n      roleId: params.id\r\n    },\r\n  })\r\n}\r\n/**\r\n * @description 角色权限保存\r\n * @since 2025-07-17\r\n */\r\nexport const saveRoleAuthorization = async (params: RoleSearchParams) => {\r\n  return request(`/api/sys/role-resource/save`, {\r\n    method: 'POST',\r\n    data: {\r\n      roleId: params.id,\r\n      resourceIds: params.resourceIds\r\n    },\r\n  })\r\n}\r\n","import React from \"react\";\r\nimport DrawerForm from \"@/components/DrawerForm\";\r\nimport {request, useIntl} from \"@umijs/max\";\r\nimport {Form} from \"antd\";\r\nimport {ProFormText, ProFormTextArea} from \"@ant-design/pro-components\";\r\nimport {addRoleInfo, getRoleInfo, updateRoleInfo} from \"@/services/sys/roleController\";\r\nimport {RoleSearchParams} from \"@/services/entity/Sys\";\r\n\r\nconst RoleForm = (props: {\r\n  id: any;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onSuccess: () => void\r\n}) => {\r\n  const {id, open, setOpen, onSuccess} = props\r\n  const [form] = Form.useForm();\r\n  const intl = useIntl()\r\n  return (\r\n    <DrawerForm\r\n      request={async (params:RoleSearchParams) =>  getRoleInfo(params) }\r\n      id={id}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      onSuccess={async (values: any) => {\r\n        if (id) {\r\n          await updateRoleInfo(values);\r\n        } else {\r\n          await addRoleInfo(values);\r\n        }\r\n        onSuccess();\r\n        return true;\r\n      }}\r\n      form={form}\r\n    >\r\n      <ProFormText\r\n        name={'id'}\r\n        hidden={true}\r\n      />\r\n      <ProFormText\r\n        name=\"name\"\r\n        label={intl.formatMessage({id: 'pages.common.name'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormText\r\n        name=\"sortNum\"\r\n        label={intl.formatMessage({id: 'pages.common.sort.number'})}\r\n        rules={[{required: true}]}\r\n      />\r\n      <ProFormTextArea\r\n        name=\"description\"\r\n        label={intl.formatMessage({id: 'pages.common.description'})}\r\n        fieldProps={{\r\n          maxLength: 1024,\r\n          showCount: true\r\n        }}\r\n      />\r\n    </DrawerForm>\r\n  )\r\n\r\n}\r\nexport default RoleForm\r\n","import {ProForm} from \"@ant-design/pro-components\";\r\nimport React, {useState} from \"react\";\r\nimport DrawerForm from \"@/components/DrawerForm\";\r\nimport {Form, message, Tree} from \"antd\";\r\nimport {useIntl} from \"@umijs/max\";\r\nimport {getResourceList, getRoleAuthorization, saveRoleAuthorization} from \"@/services/sys/roleController\";\r\n\r\n\r\nconst removeParentSelected = (resources: Array<any>, checkedResources: Array<string>,\r\n                              halfCheckedResources: Array<string>) => {\r\n  for (const resource of resources) {\r\n    // 有子节点直接移除\r\n    if (resource.children && resource.children.length > 0) {\r\n      const index = checkedResources.indexOf(resource.id);\r\n      if (index >= 0) {\r\n        const x = checkedResources.splice(index, 1);\r\n        halfCheckedResources.push(...x);\r\n      }\r\n      removeParentSelected(resource.children, checkedResources, halfCheckedResources);\r\n    }\r\n  }\r\n};\r\nconst AuthorizationForm = (props: {\r\n  id: any;\r\n  open?: boolean;\r\n  setOpen?: (open: boolean) => void;\r\n  onSuccess: () => void\r\n}) => {\r\n  const {id, open, setOpen, onSuccess} = props\r\n  const [form] = Form.useForm()\r\n  const intl = useIntl()\r\n  const [resourceIds, setResourceIds] = useState<any[]>([])\r\n  const [checkedKeys, setCheckedKeys] = useState<any[]>([])\r\n  const [halfCheckedKeys, setHalfCheckedKeys] = useState<any[]>([])\r\n  return (\r\n    <DrawerForm\r\n      open={open}\r\n      setOpen={setOpen}\r\n      id={id}\r\n      request={async (params) => {\r\n        const info = async () => {\r\n          const resourceList = await getResourceList();\r\n          let resources = resourceList.data;\r\n          if (id) {\r\n            const promise = await getRoleAuthorization({id});\r\n            const halfCheckedResources: Array<string> = [];\r\n            setResourceIds(resources)\r\n            removeParentSelected(resources, promise.data, halfCheckedResources)\r\n            setCheckedKeys(promise.data)\r\n            setHalfCheckedKeys(halfCheckedResources)\r\n          } else {\r\n            setResourceIds(resources)\r\n          }\r\n        }\r\n        await info()\r\n      }}\r\n      onSuccess={async () => {\r\n        const {code, message: msg} = await saveRoleAuthorization({\r\n          id,\r\n          resourceIds: [...checkedKeys, ...halfCheckedKeys]\r\n        })\r\n        if (code !== 200) {\r\n          message.error(msg)\r\n          return false\r\n        }\r\n        message.success(msg)\r\n        onSuccess()\r\n        return true\r\n      }}\r\n      form={form}>\r\n      <ProForm.Item\r\n        name=\"resourceIds\"\r\n        valuePropName=\"resourceIds\"\r\n        label={intl.formatMessage({id: 'pages.sys.resource.name'})}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            validator: async () => {\r\n              if (checkedKeys.length === 0) {\r\n                return Promise.reject(new Error(intl.formatMessage({id: 'pages.sys.resource.required'})))\r\n              } else {\r\n                return Promise.resolve()\r\n              }\r\n            }\r\n          },\r\n        ]}\r\n      >\r\n        <Tree\r\n          checkable\r\n          treeData={resourceIds}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={(check: any, info: any) => {\r\n            //如果写入权限被选中，则自动选中父节点\r\n            if (info.node.type === \"Resource_Type_Permission\" && info.node.name === \"Write\" && info.checked) {\r\n              setCheckedKeys([...check, info.node.parentId + \"\", info.node.key])\r\n            } else {\r\n              setCheckedKeys(check)\r\n            }\r\n            setHalfCheckedKeys(info.halfCheckedKeys)\r\n          }}\r\n        />\r\n      </ProForm.Item>\r\n    </DrawerForm>\r\n  )\r\n}\r\nexport default AuthorizationForm\r\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport {ActionType, PageContainer, ProTable} from \"@ant-design/pro-components\";\r\nimport {Button, message, Popconfirm} from \"antd\";\r\nimport {useIntl} from \"@umijs/max\";\r\nimport RoleForm from \"@/pages/sys/role/RoleForm\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {FormattedMessage, history, useAccess} from \"@@/exports\";\r\nimport AuthorizationForm from \"@/pages/sys/role/AuthorizationForm\";\r\nimport {deleteRoleInfo, getRoleList} from \"@/services/sys/roleController\";\r\nimport {RoleSearchParams} from \"@/services/entity/Sys\";\r\n\r\nconst Role: React.FC = () => {\r\n  const intl = useIntl()\r\n  const [open, setOpen] = useState(false)\r\n  const [authorizationOpen, setAuthorizationOpen] = useState(false)\r\n  const [id, setId] = useState(undefined)\r\n  const ref = useRef<ActionType>()\r\n  const permissionMap = useAccess();\r\n  const path = history.location.pathname\r\n  const write = permissionMap[path]\r\n  const columns: any[] = [\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.name'}),\r\n      dataIndex: 'name',\r\n      valueType: 'text',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.description'}),\r\n      dataIndex: 'description',\r\n      valueType: 'text',\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.createTime'}),\r\n      dataIndex: 'createAt',\r\n      valueType: 'dateTime',\r\n      hideInSearch: true\r\n    },\r\n    {\r\n      title: intl.formatMessage({id: 'pages.common.option'}),\r\n      dataIndex: 'option',\r\n      valueType: 'option',\r\n      fixed: 'right',\r\n      render: (_: any, record: any) => write && [\r\n        <Button\r\n          type={'link'}\r\n          key=\"editable\"\r\n          onClick={() => {\r\n            setId(record.id)\r\n            setOpen(true)\r\n          }}\r\n        >\r\n          {intl.formatMessage({id: 'pages.common.edit'})}\r\n        </Button>,\r\n        <Button\r\n          type={'link'}\r\n          key=\"auth\"\r\n          onClick={() => {\r\n            setId(record.id)\r\n            setAuthorizationOpen(true)\r\n          }}\r\n        >\r\n          {intl.formatMessage({id: 'pages.sys.auth.role.resource'})}\r\n        </Button>,\r\n        <Popconfirm\r\n          key={'delete'}\r\n          title={intl.formatMessage({id: 'pages.confirm.delete'})}\r\n          onConfirm={async () => {\r\n            const {code, message: msg} = await deleteRoleInfo(record);\r\n            if (code === 200) {\r\n              message.success(msg)\r\n            } else {\r\n              message.error(msg)\r\n            }\r\n            ref.current?.reload()\r\n          }}\r\n        >\r\n          <Button type={'link'}\r\n                  key={'delete'}>\r\n            {intl.formatMessage({id: 'pages.common.delete'})}\r\n          </Button>\r\n        </Popconfirm>\r\n      ],\r\n    }\r\n  ]\r\n  return (\r\n    <PageContainer>\r\n      <ProTable\r\n        toolBarRender={() => write && [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined/>}\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setId(undefined)\r\n              setOpen(true)\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"pages.common.new\"/>\r\n          </Button>,\r\n        ]}\r\n        actionRef={ref}\r\n        request={async (params: RoleSearchParams) => getRoleList(params)}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n      />\r\n      <RoleForm\r\n        id={id}\r\n        open={open}\r\n        setOpen={setOpen}\r\n        onSuccess={() => {\r\n          setId(undefined)\r\n          ref.current?.reload()\r\n        }}/>\r\n      <AuthorizationForm\r\n        id={id}\r\n        open={authorizationOpen}\r\n        setOpen={(open) => {\r\n          if (!open)\r\n            setId(undefined)\r\n          setAuthorizationOpen(open)\r\n        }}\r\n        onSuccess={() => {\r\n          setId(undefined)\r\n        }}/>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n"],"names":[],"mappings":"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"}